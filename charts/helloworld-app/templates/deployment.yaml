apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helloworld-app.fullname" . }}
  labels:
    app: {{ include "helloworld-app.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: {{ include "helloworld-app.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "helloworld-app.name" . }}
    spec:
      containers:
      - name: helloworld-app
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 5000
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgresql-username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgresql-password
        - name: DB_HOST
          value: "{{ .Values.postgresql.host }}"
        - name: DB_PORT
          value: "{{ .Values.postgresql.port }}"
        - name: DB_NAME
          value: "{{ .Values.postgresql.db }}"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5000
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
        readinessProbe:
          httpGet:
            path: /readiness
            port: 5000
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
